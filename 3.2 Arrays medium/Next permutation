public class Solution {
public void nextPermutation(int[] nums) {
int n = nums.length - 2;
while (n >= 0 && nums[n + 1] <= nums[n]) {
n--;
}
if (n >= 0) {
int j = nums.length - 1;
while (nums[j] <= nums[n]) {
j--;
}
swap(nums, n, j);
}
reverse(nums, n + 1);
}

private void reverse(int[] nums, int start) {
    int i = start, j = nums.length - 1;
    while (i < j) {
        swap(nums, i, j);
        i++;
        j--;
    }
}

private void swap(int[] nums, int i, int j) {
    int temp = nums[i];
    nums[i] = nums[j];
    nums[j] = temp;
}
}
